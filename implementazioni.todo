
riconoscimento dispositivo alla registrazione? no, alla verifica account!





problema: i token devono poter essere revocati in caso di: 
    logout (solo il token e il refresh token nel cookie), soluzione: implementare una blacklist
    recupero password tramite password dimenticata: tutti gli altri token eccetto quello nuovo vanno invalidati
    scelta dell'utente di scollegare un dispositivo: i token singoli di un dispositivo vanno rimossi



    l'utente si logga, l'auth prova a fare una richiesta col cookie device id all'otp. se fallisce l'utente è loggato ma deve inserire un codice otp quando lo inserisce se va bene l'api si salva l'user agent
    e il browser si salva il cookie con l'id restituito la richiesta riavviene (con check device) se è true si accede a resource server altrimenti messaggio di errore con route tipo response del auth server
    questo permette di: scollegare i dispositivi (essi rimarranno loggati in quanto conoscono nome utente e password e possietono i token, 
    ma se vogliamo revocare questo basta ad esempio cambiare password: nel database (al cambio password) si crea un campo stringa chiamato per esempio jwt valid after con una data, che si salva nel payload all'emissione, se la data di emissione token è antecedente a quella nel db allora l'utente non ha un token valido)
    rotte da cambiare quindi: solo le jwt required, si accede alla data importando get_jwt() e facendo var = get_jwt() var['emission_date'] 

    navigator.userAgentData .platform e .mobile

    da msg a message e da sha256 a es512, forse si crittano i token pure
    user probably deleted da implementare in route auth server
    numero massimo tentativi otp poi salt si resetta a ''


    l'utente si logga: se è presente un parametro nel link si crea un jwt completo, altrimenti si crea un jwt senza dispositivo e si reindirizza all'otp server
    otp server: se 

    oggi: 
        otp corretto: il dispositivo viene letto e registrato dal jwt, il jwt che si ottiene al login ha incluso un id dispositivo

        implementare riconoscimento dispositivo nell'otp e banlist
        cambio algoritmo jwt
        trovare modo per evitare il login tramite api (evita bruteforce skippando la parte captcha) (SI IMPLEMENTA IN DIST E SI DEVE POTER DISATTIVARE CON BOOLEANO, magari un semplice token firmato server)


        nell'auth server si prova comunque a mandare una richiesta a login o login con google contenente un jwt e si prova a ottenere un device



       
       
       
       soluzione forse finale: scollega dispositivo o altre forme di logout: aggiunge una chiave Banned: true, se è true vuol dire che il token è da bannare 
       in fase di otp quindi redirect al login altrimenti è solo un nuovo dispositivo in fase di registrazione e autorizzazione. questo permette all'auth server di gestire l'intera emissione dei token
       se l'utente si logga su google non deve ricevere otp o altro (molto semplice: in fase di login o registrazione si emette un token con id dispositivo e in contemporanea si salva l'id dispositivo nel database)
        per utenti non google il login da un token con id dispositivo ma sarà l'otp server in route check a decidere se tale id dispositivo verrà salvato nel db (solo la registrazione deve autorizzare ed emettere un token con id dispositivo salvato nel db)
        sostituire quindi emission date e sostituirlo con device_id
        salva stesso device solo in caso di refresh token scaduto


        implementato in: otp check e login: login con google e refresh token da fare

        blacklist da implementare
        il parametro deve essere controllato al login e ignorato in caso di id non valido
        la disconnessione dispositivo deve essere un pop e non un unset su mongo per evitare errori in mongodb


        da implementare:
        login con google ancora da vedere come
        se non ci sono dispositivi collegati ma l'utente si è già loggato la prima volta giusto che faccia l'otp
        banlist dei token