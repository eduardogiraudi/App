version: '3'
services:
  mongodb:
    build:
      context: .
      dockerfile: Dockerfile.mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      # - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      - mongodb_data:/data/db
    env_file: .env
    command: mongod 
  redis:
    build:
      context: .
      dockerfile: Dockerfile.redis
    container_name: redis
    command: ["redis-server","--port 6380" , "--requirepass", "redis"]
    env_file: .env
    ports: 
      - "6380:6380"
    volumes:
      - type: volume
        source: redis-data
        target: /data

    # prima creare un user così tipo poi mandare giù il db e decommentare: db.createUser({user: "admin",pwd: "admin_password",roles: [{ role: "userAdminAnyDatabase", db: "admin" }]})
    # command: --auth 
  mongodb_backup:
    build:
      context: .
      dockerfile: Dockerfile.mongo
    container_name: mongodb_backup
    ports:
      - "27018:27018"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER_BACKUP}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD_BACKUP}
    volumes:
      - mongodb_backup_data:/data/db
    env_file: .env
    command: mongod --port 27018
volumes:
  mongodb_data:
  mongodb_backup_data:
  redis-data: {}
